-- Concept 定义部分

-- 点
def_cpt Point = {x:Int; y:Int}

-- 椭圆: 成员是其x、y的平方的系数的倒数
def_cpt Ellipse_Std <- Curve = {recip_coeff_sq_x:Num; recip_coeff_sq_y:Num}

-- 双曲线: 成员是其x、y的平方的系数的倒数
def_cpt Hyperbola_Std_1 <- Curve = {recip_coeff_sq_x:Num; recip_coeff_sq_y:Num}
def_cpt Hyperbola_Std_2 <- Curve = {recip_coeff_sq_x:Num; recip_coeff_sq_y:Num}

-- 抛物线: 成员是其x或y的系数
def_cpt Parabola_Std_1 <- Curve = {coeff_x:Num}
def_cpt Parabola_Std_2 <- Curve = {coeff_y:Num}

-- 直线: ax+by+c=0
def_cpt Line_Std = {a:Num; b:Num; c:Num}


-- Individual 定义部分

-- 坐标原点
def_indi origin:Point = {x:=0; y:=0}


-- Operator 定义部分

-- 生成直线方程: ax+by+c=0
def_op Generate_Line_Eq(l:Num; m:Num; n:Num) = {assert l_std:Line_Std = {a:=l; b:=m; c:=n}}

-- 把点代入曲线方程，生成新的等式
def_op Subst_Point_Into_Curve(p:Point; c:Curve) = {Subst(Subst(Left(Equation(c)),x,p.x),y,p.y) = Subst(Subst(Right(Equation(c)),x,p.x),y,p.y)}




-- 知识部分

{p:Point; c:Curve; {Point_On_Curve(p,c)}} =>  {Subst_Point_Into_Curve(p,c)} # 如果点在曲线上，就把点代入曲线方程 #


{a:Num; b:Num; {a>0}; {b>0}; {a>b}} => {a^2>b^2} # 如果a>0,b>0,a>b,那么a^2>b^2 #